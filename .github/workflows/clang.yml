name: Build LLVM Project for Android

on:
   workflow_dispatch

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Install required tools
      run: |
        sudo apt-get update
        sudo apt-get install -y build-essential binutils wget unzip ninja-build

    - name: Set up Android NDK
      run: |
        wget https://dl.google.com/android/repository/android-ndk-r27c-linux.zip
        unzip android-ndk-r27c-linux.zip -d $HOME
        echo "NDK_HOME=$HOME/android-ndk-r27c" >> $GITHUB_ENV

    - name: Download LLVM Project source
      run: |
        wget https://github.com/llvm/llvm-project/releases/download/llvmorg-18.1.8/llvm-project-18.1.8.src.tar.xz
        tar -xJf llvm-project-18.1.8.src.tar.xz

    - name: Build LLVM Project
      run: |
        export NDK_HOME=$HOME/android-ndk-r27c
        export TOOLCHAIN=$NDK_HOME/toolchains/llvm/prebuilt/linux-x86_64
        export TARGET_ARCH=arm64-v8a
        export SYSROOT=$TOOLCHAIN/sysroot
        export CC=$TOOLCHAIN/bin/aarch64-linux-android25-clang
        export CXX=$TOOLCHAIN/bin/aarch64-linux-android25-clang++

        cd llvm-project-18.1.8.src/llvm
        mkdir build && cd build
        cmake -G Ninja -DCMAKE_TOOLCHAIN_FILE=$NDK_HOME/build/cmake/android.toolchain.cmake -DCMAKE_CROSSCOMPILING=ON -DANDROID_ABI=arm64-v8a -DANDROID_PLATFORM=android-21 -DCMAKE_BUILD_TYPE=Release ..
        ninja -j16

    - name: Package output directory
      run: |
        cd llvm-project-18.1.8.src/build
        tar -cJf llvm-output.tar.xz .

    - name: Upload output archive
      uses: actions/upload-artifact@v3
      with:
        name: llvm-output
        path: llvm-project-18.1.8.src/build/llvm-output.tar.xz
