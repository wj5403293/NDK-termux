name: Build LLVM Project for Android

on:
  workflow_dispatch

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Build in Docker container
      run: |
        docker run --rm -v ${{ github.workspace }}:/workspace -w /workspace \
        gcc:latest bash -c "
          apt-get update && apt-get install -y wget unzip ninja-build && \
          wget https://dl.google.com/android/repository/android-ndk-r27c-linux.zip && \
          unzip android-ndk-r27c-linux.zip -d /workspace && \
          NDK_HOME=/workspace/android-ndk-r27c && \
          TOOLCHAIN=\$NDK_HOME/toolchains/llvm/prebuilt/linux-x86_64 && \
          TARGET_ARCH=arm64-v8a && \
          SYSROOT=\$TOOLCHAIN/sysroot && \
          CC=\$TOOLCHAIN/bin/aarch64-linux-android25-clang && \
          CXX=\$TOOLCHAIN/bin/aarch64-linux-android25-clang++ && \
          wget https://github.com/llvm/llvm-project/releases/download/llvmorg-18.1.8/llvm-project-18.1.8.src.tar.xz && \
          tar -xJf llvm-project-18.1.8.src.tar.xz && \
          cd llvm-project-18.1.8.src/llvm && \
          mkdir build && cd build && \
          cmake -G Ninja -DCMAKE_TOOLCHAIN_FILE=\$NDK_HOME/build/cmake/android.toolchain.cmake -DCMAKE_CROSSCOMPILING=ON -DANDROID_ABI=\$TARGET_ARCH -DANDROID_PLATFORM=android-21 -DLLVM_TARGETS_TO_BUILD=all -DCMAKE_BUILD_TYPE=Release .. && \
          ninja -j16 && \
          cd .. && \
          tar -cJf llvm-output.tar.xz build
        "

    - name: Upload output archive
      uses: actions/upload-artifact@v3
      with:
        name: llvm-output
        path: llvm-project-18.1.8.src/llvm-output.tar.xz
